<?php

namespace Buseta\BodegaBundle\Entity;

use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\NoResultException;

/**
 * BodegaRepository.
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class BodegaRepository extends EntityRepository
{
    public function searchByValor($valores)
    {
        $q = "SELECT r FROM BusetaBodegaBundle:Bodega r WHERE r.id = :valores";

        $query = $this->_em->createQuery($q);
        $query->setParameter('valores', $valores);

        try {
            return $query->getResult();
        } catch (NoResultException $e) {
            return false;
        }
    }

    public function busquedaAvanzada($page, $cantResult, $filter = array(), $orderBy = null)
    {
        $q = 'SELECT p FROM BusetaBodegaBundle:Bodega p WHERE p.id != 0';

        //Obteniendo resto de la consulta dql
        $q .= $this->constructSubDQL($filter);

        //Estableciendo Order By
        if (empty($orderBy)) {
            $q .= ' ORDER BY p.id DESC';
        } else {
            $q .= ' ORDER BY '.$orderBy;
        }

        $maxResult = $this->getNotDeletedMaxResult($filter);
        $firstResult = $page * $cantResult;

        if ($firstResult > $maxResult) {
            $firstResult = 0;
            $page = 0;
        }

        //Valores de navegaci√≥n
        if ($maxResult < $cantResult) {
            $last = 0;
        } elseif ($maxResult % $cantResult > 0) {
            $last = floor($maxResult / $cantResult);
        } else {
            $last = floor($maxResult / $cantResult)-1;
        }

        if ($last < 0) {
            $last = 0;
        }
        $next = ($page != $last) ? true : false;
        $prev = ($page != 0) ? true : false;
        $first = ($page == 0) ? false : true;

        $query = $this->_em->createQuery($q);
        $query->setMaxResults($cantResult);
        $query->setFirstResult($firstResult);

        try {
            $results = $query->getResult();

            return array(
                'results' => $results,
                'paginacion' => array(
                    'next' => $next,
                    'prev' => $prev,
                    'first' => $first,
                    'last' => $last,
                ),
            );
        } catch (NoResultException $e) {
            return array(
                'results' => array(),
                'paginacion' => array(),
            );
        }
    }

    public function getNotDeletedMaxResult($filter)
    {
        $q = 'SELECT COUNT(p) FROM BusetaBodegaBundle:Bodega p WHERE p.id != 0';
        $q .= $this->constructSubDQL($filter);

        $query = $this->_em->createQuery($q);
        try {
            return $query->getSingleScalarResult();
        } catch (NoResultException $e) {
            return false;
        }
    }

    public function constructSubDQL($filter)
    {
        $q = '';

        if (isset($filter['codigo']) && !empty($filter['codigo'])) {
            $q .= " AND UPPER(p.codigo) LIKE '%".strtoupper($filter['codigo'])."%'";
        }

        if (isset($filter['nombre']) && !empty($filter['nombre'])) {
            $q .= " AND UPPER(p.nombre) LIKE '%".strtoupper($filter['nombre'])."%'";
        }

        if (isset($filter['descripcion']) && !empty($filter['descripcion'])) {
            $q .= " AND UPPER(p.descripcion) LIKE '%".strtoupper($filter['descripcion'])."%'";
        }

        if (isset($filter['direccion']) && !empty($filter['direccion'])) {
            $q .= " AND UPPER(p.direccion) LIKE '%".strtoupper($filter['direccion'])."%'";
        }

        return $q;
    }
}
