<?php

namespace Buseta\BodegaBundle\Entity\Repository;

use Buseta\BodegaBundle\Form\Model\ProveedorFilterModel;
use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\NoResultException;

/**
 * ProveedorRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ProveedorRepository extends EntityRepository
{
    public function filter(ProveedorFilterModel $filter = null)
    {
        $qb = $this->createQueryBuilder('p');
        $query = $qb->where($qb->expr()->eq(true,true));
        $query->innerJoin('p.tercero', 'tercero');

        if($filter) {
            if ($filter->getCodigo() !== null && $filter->getCodigo() !== '') {
                $query->andWhere($qb->expr()->andX(
                    $qb->expr()->like('tercero.codigo',':codigo')
                ))
                    ->setParameter('codigo', '%' . $filter->getCodigo() . '%');
            }
            if ($filter->getAlias() !== null && $filter->getAlias() !== '') {
                $query->andWhere($qb->expr()->andX(
                    $qb->expr()->like('tercero.alias',':alias')
                ))
                ->setParameter('alias', '%' . $filter->getAlias() . '%');
            }
            if ($filter->getNombres() !== null && $filter->getNombres() !== '') {
                $query->andWhere($qb->expr()->andX(
                    $qb->expr()->like('tercero.nombres',':nombres')
                ))
                ->setParameter('nombres', '%' . $filter->getNombres() . '%');
            }
            if ($filter->getApellidos() !== null && $filter->getApellidos() !== '') {
                $query->andWhere($qb->expr()->andX(
                    $qb->expr()->like('tercero.apellidos',':apellidos')
                ))
                    ->setParameter('apellidos', '%' . $filter->getApellidos() . '%');
            }
            if ($filter->getCifNif() !== null && $filter->getCifNif() !== '') {
                $query->andWhere($qb->expr()->andX(
                    $qb->expr()->like('tercero.cifNif',':cifNif')
                ))
                    ->setParameter('cifNif', '%' . $filter->getCifNif() . '%');
            }
            if ($filter->getMoneda() !== null && $filter->getMoneda() !== '') {
                $query->andWhere($query->expr()->eq('p.moneda', ':moneda'))
                    ->setParameter('moneda', $filter->getMoneda());
            }



        }

        $query->orderBy('p.id', 'ASC');

        try {
            return $query->getQuery();
        } catch (NoResultException $e) {
            return array();
        }
    }


}
